# pendulum up (b=1)
A = np.array([[0,1,0,0],\
              [0,-d/M,b*m*g/M,0],\
              [0,0,0,1],\
              [0,-b*d/(M*L),-b*(m+M)*g/(M*L),0]])
B = np.array([0,1/M,0,b/(M*L)]).reshape((4,1))

===

A_lin_case1
Matrix([[0, 1, 0, 0], 
        [0, -d/M, -g*m/M, 0], 
        [0, 0, 0, 1], 
        [0, d/(L*M), g*(M + m)/(L*M), 0]])
B_lin_case1
Matrix([[0], [1/M], [0], [-1/(L*M)]])
A_lin_case2
Matrix([
    [0, 1, 0, 0], 
    [0, -d/M, -g*m/M, 0], 
    [0, 0, 0, 1], 
    [0, -d/(L*M), -g*(M + m)/(L*M), 0]])
B_lin_case2
Matrix([[0], [1/M], [0], [1/(L*M)]])


case 2 사용
A[1,2]가 의심되는데? 부호가 반대임
=> case 1에 b = -1 쓴거 아니니?

그렇다면 이거다!

A_lin_case1
Matrix([[0, 1, 0, 0], 
        [0, -d/M, g*m/M, 0], 
        [0, 0, 0, 1], 
        [0, d/(L*M), -g*(M + m)/(L*M), 0]])
B_lin_case1
Matrix([[0], [1/M], [0], [-1/(L*M)]])

[] 

linear
[0.0, -18.10816157418091, 0.0, 6.845931178767479] [[-122.3408318]]
[-0.0001071083310424179, -18.1112063160071, 4.04931367541216e-05, 6.844408807854386] [[-122.35606622]]
[-0.00010712634044741035, -18.111206167243154, 4.048413205162537e-05, 6.844408883411173] [[-122.35606548]]
[-0.00021425267913496697, -18.114250760314526, 8.096826499707549e-05, 6.842886588049781] [[-122.37129916]]
[-0.00021427068766008655, -18.114250611555146, 8.095926074146157e-05, 6.842886663604023] [[-122.37129842]]

non-linear
[0.0, -24.224983065590614, 0.0, -11.562296618373457] -122.34083180262043     
[-0.00011299865266638161, -24.22398938986518, -5.393291446552379e-05, -11.56180226263059] -122.3358648195989
[-0.00011299401761595218, -24.223989414566653, -5.393060851828202e-05, -11.561802276451619] -122.33586493925955
[-0.00022598803546234686, -24.22299576377346, -0.00010786121716550182, -11.561307934644427] -122.33089807589378
[-0.0002259834005282151, -24.222995788474382, -0.00010785891128326372, -11.561307948465107] -122.33089819555194

=> alpha 부호가 반대